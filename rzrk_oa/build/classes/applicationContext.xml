<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
       default-lazy-init="true">

	<aop:config />
	<context:component-scan base-package="com.rzrk" />
	<context:property-placeholder location="classpath*:/database.properties"/>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialPoolSize" value="${pool.initialPoolSize}" />
		<property name="minPoolSize" value="${pool.minPoolSize}" />
		<property name="maxPoolSize" value="${pool.maxPoolSize}" />
		<property name="maxIdleTime" value="${pool.maxIdleTime}" />
		<property name="acquireIncrement" value="${pool.acquireIncrement}" />
		<property name="checkoutTimeout" value="${pool.checkoutTimeout}" />
		<property name="maxIdleTimeExcessConnections" value="${pool.maxIdleTimeExcessConnections}" />
	</bean>
	
	<bean id="databaseNamingStrategy" class="com.rzrk.common.DatabaseNamingStrategy">
		<property name="tablePrefix" value="${namingStrategy.tablePrefix}" />
		<property name="isAddUnderscores" value="${namingStrategy.isAddUnderscores}" />
		<property name="maxLength" value="${namingStrategy.maxLength}" />
    </bean>
    
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="entityInterceptor" ref="entityInterceptor" />
		<property name="namingStrategy" ref="databaseNamingStrategy" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider</prop>
				<prop key="hibernate.search.default.indexBase">${java.io.tmpdir}/rzrk/index</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.rzrk.entity" />
	</bean>
	
	<bean id="springUtil" class="com.rzrk.util.SpringUtil" lazy-init="false" />
    
	<bean id="freeMarkerConfigurationFactoryBean" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<property name="templateLoaderPath" value="/" ></property>
		<property name="freemarkerVariables">
			<map>
				<entry key="substringMethod" value-ref="substringMethod"/>
				<entry key="checkboxDirective" value-ref="checkboxDirective"/>
				<entry key="paginationDirective" value-ref="paginationDirective"/>
				<entry key="articleCategoryListDirective" value-ref="articleCategoryListDirective"/>
				<entry key="articleCategoryTreeDirective" value-ref="articleCategoryTreeDirective"/>
				<entry key="articleListDirective" value-ref="articleListDirective"/>
			</map>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="url_escaping_charset">utf-8</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="time_format">HH:mm:Ss</prop>
				<prop key="datetime_format">yyyy-MM-dd</prop>
				<prop key="number_format">\#0.\#\#\#\#\#</prop>
			</props>
		</property>
	</bean>     
	
	<!-- 自定义标签 -->
	<bean id="substringMethod" class="com.rzrk.directive.SubstringMethod"/>
	<bean id="checkboxDirective" class="com.rzrk.directive.CheckboxDirective"/>
	<bean id="paginationDirective" class="com.rzrk.directive.PaginationDirective"/>
	<bean id="articleCategoryListDirective" class="com.rzrk.directive.ArticleCategoryListDirective"/>
	<bean id="articleCategoryTreeDirective" class="com.rzrk.directive.ArticleCategoryTreeDirective"/>
	<bean id="articleListDirective" class="com.rzrk.directive.ArticleListDirective"/>
	
	
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="captchaService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
		<property name="captchaEngine">
			<bean class="com.rzrk.common.CaptchaEngine" />
		</property>
		<property name="minGuarantedStorageDelayInSeconds" value="600" />
	</bean>
	
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
				<!--
				<prop key="mail.smtp.starttls.enable">true</prop>  
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				-->
			</props>
		</property>
	</bean>

    <bean id="javaSmsSender" class="com.rzrk.sms.impl.eachweSmsSender"/>
	
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="50" />
		<property name="queueCapacity" value="1000" />
		<property name="keepAliveSeconds" value="60" />
	</bean>
	
	<!-- 定时任务 -->
	<bean id="checkLogTask" 
	  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"> 
	  <property name="targetObject" ref="checkinTask" /> 
	  <property name="targetMethod" value="checkLast" /> 
	  <property name="concurrent" value="false" /> 
	</bean> 
	<!--每隔1分钟刷新一次--> 
	<bean id="checkLogTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"> 
	  <property name="jobDetail" ref="checkLogTask" /> 
	  <property name="cronExpression" value="0 0 3,12 * * ?" /> 
	  <!-- 
	  <property name="cronExpression" value="*/1 * * * * ?" />
	   -->
	</bean> 
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false" > 
	  <property name="triggers"> 
	   <list> 
	    <ref bean="checkLogTrigger" /> 
	   </list> 
	  </property> 
	</bean>
    
	<bean id="txProxyTemplate" abstract="true" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

</beans>